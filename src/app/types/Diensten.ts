/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/Diensten/CreateTable": {
    post: {
      parameters: {
        query: {
          /** Dummy records aanmaken */
          FILLDATA: boolean;
        };
      };
      responses: {
        /** Aangemaakt, Tabel toegevoegd */
        201: unknown;
        /** Data verwerkingsfout, bijv omdat de tabel al bestaat */
        500: unknown;
      };
    };
  };
  "/Diensten/CreateViews": {
    post: {
      responses: {
        /** Aangemaakt, View toegevoegd */
        201: unknown;
        /** Data verwerkingsfout, view niet aangemaak */
        500: unknown;
      };
    };
  };
  "/Diensten/GetObject": {
    get: {
      parameters: {
        query: {
          /** Database ID van het dienst record */
          ID: number;
        };
      };
      responses: {
        /** OK, data succesvol opgehaald */
        200: {
          content: {
            "application/json": components["schemas"]["oper_diensten"];
          };
        };
        /** Data niet gevonden */
        404: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Diensten/GetObjects": {
    get: {
      parameters: {
        query: {
          /** Database ID van het diensten record */
          ID?: number;
          /** Toon welke records verwijderd zijn. Default = false */
          VERWIJDERD?: boolean;
          /** Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg */
          LAATSTE_AANPASSING?: boolean;
          /** HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
          HASH?: string;
          /** Sortering van de velden in ORDER BY formaat. Default = DATUM */
          SORT?: string;
          /** Maximum aantal records in de dataset. Gebruikt in LIMIT query */
          MAX?: number;
          /** Eerste record in de dataset. Gebruikt in LIMIT query */
          START?: number;
          /** Welke velden moet opgenomen worden in de dataset */
          VELDEN?: string;
          /** Diensten van een bepaald lid */
          LID_ID?: string;
          /** Zoek op datum */
          DATUM?: string;
          /** Begin datum (inclusief deze dag) */
          BEGIN_DATUM?: string;
          /** Eind datum (inclusief deze dag) */
          EIND_DATUM?: string;
          /** Zoek op een of meerder type diensten. Types als CSV formaat */
          TYPES?: string;
          /** Haal alle diensten op waar lid aanwezig was */
          AANWEZIG?: boolean;
          /** Haal alle diensten op waar lid NIET aanwezig was */
          AFWEZIG?: boolean;
        };
      };
      responses: {
        /** OK, data succesvol opgehaald */
        200: {
          content: {
            "application/json": components["schemas"]["view_diensten"];
          };
        };
        /** Data niet gemodificeerd, HASH in aanroep == hash in dataset */
        304: never;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Diensten/TotaalDiensten": {
    get: {
      parameters: {
        query: {
          /** Voor welk jaar wordt de data opgevraagd */
          JAAR: number;
          /** Voor welk lid wordt de data opgevraagd */
          LID_ID: number;
        };
      };
      responses: {
        /** OK, data succesvol opgehaald */
        200: {
          content: {
            "application/json": components["schemas"]["diensten_totaal"];
          };
        };
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Diensten/DeleteObject": {
    delete: {
      parameters: {
        query: {
          /** Database ID van het diensten record. Meerdere ID's in CSV formaat */
          ID: string;
          /** Controleer of record bestaat voordat het verwijderd wordt. Default = true */
          VERIFICATIE?: boolean;
        };
      };
      responses: {
        /** Dienst verwijderd */
        204: never;
        /** Niet geautoriseerd, geen schrijfrechten */
        401: unknown;
        /** Data niet gevonden */
        404: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Diensten/RestoreObject": {
    patch: {
      parameters: {
        query: {
          /** Database ID van het record. Meerdere ID's in CSV formaat */
          ID: string;
        };
      };
      responses: {
        /** Record(s) hersteld */
        202: unknown;
        /** Niet geautoriseerd, geen schrijfrechten */
        401: unknown;
        /** Data niet gevonden */
        404: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Diensten/SaveObject": {
    put: {
      responses: {
        /** OK, data succesvol aangepast */
        200: {
          content: {
            "application/json": components["schemas"]["oper_diensten"];
          };
        };
        /** Niet geautoriseerd, geen schrijfrechten */
        401: unknown;
        /** Data niet gevonden */
        404: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Conflict, dienst is al ingevuld */
        409: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
      /** Dienst data */
      requestBody: {
        content: {
          "application/json": components["schemas"]["oper_diensten_in"];
        };
      };
    };
    post: {
      responses: {
        /** OK, data succesvol toegevoegd */
        200: {
          content: {
            "application/json": components["schemas"]["oper_diensten"];
          };
        };
        /** Niet geautoriseerd, geen schrijfrechten */
        401: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Conflict, dienst is al ingevuld */
        409: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
      /** Dienst data */
      requestBody: {
        content: {
          "application/json": components["schemas"]["oper_diensten_in"];
        };
      };
    };
  };
}

export interface components {
  schemas: {
    oper_diensten_in: {
      /**
       * Format: int32
       * @description Database ID van het dienten record
       * @example 12871
       */
      ID?: number;
      /**
       * Format: date
       * @description Datum van de rooster
       * @example 2017-07-21
       */
      DATUM?: string;
      /**
       * @description Voor wie is deze dienst. Verwijzing naar leden tabel
       * @example 10412
       */
      LID_ID?: number;
      /**
       * Format: int32
       * @description Link naar type tabel. Geeft aan wat voor type dienst
       * @example 12
       */
      TYPE_DIENST_ID?: number;
      /**
       * @description Is lid aanwezig geweest
       * @example 1
       */
      AANWEZIG?: boolean;
      /**
       * @description Lid is niet komen opdagen
       * @example 0
       */
      AFWEZIG?: boolean;
      /**
       * @description Is de DDWV crew uitbetaald?
       * @example 1
       */
      UITBETAALD?: boolean;
    };
    oper_diensten: components["schemas"]["oper_diensten_in"] & {
      /**
       * @description Verwijzing naar rooster tabel
       * @example 10900
       */
      ROOSTER_ID?: number;
      /**
       * @description Diegene die de dienst heeft ingevoerd. Verwijzing naar leden tabel
       * @example 10900
       */
      INGEVOERD_DOOR_ID?: number;
      /**
       * @description Is dit record gemarkeerd als verwijderd?
       * @example 0
       */
      VERWIJDERD?: boolean;
      /**
       * Format: date-time
       * @description Tijdstempel van laaste aanpassing in de database
       * @example 2020-03-03 17:14:50Z
       */
      LAATSTE_AANPASSING?: string;
    };
    view_diensten_dataset: components["schemas"]["oper_diensten"] & {
      /**
       * @description Naam van het lid
       * @example Juffrouw Ooievaar
       */
      NAAM?: string;
      /**
       * @description Naam van diegene die de dienst heeft ingevoerd
       * @example Meneer Ooievaar
       */
      INGEVOERD_DOOR?: string;
      /**
       * @description Beschrijving van de dienst
       * @example Ochtend lierist
       */
      TYPE_DIENST?: string;
    };
    view_diensten: {
      /**
       * Format: int32
       * @description Aantal records dat voldoet aan de criteria in de database
       * @example 51
       */
      totaal?: number;
      /**
       * Format: date-time
       * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
       * @example 2016-12-07 09:10:19
       */
      laatste_aanpassing?: string;
      /**
       * @description hash van de dataset
       * @example 40ab00b
       */
      hash?: string;
      /** @description De dataset met records */
      dataset?: components["schemas"]["view_diensten_dataset"][];
    };
    diensten_totaal: {
      /**
       * @description Verwijzing naar leden tabel
       * @example 10900
       */
      LID_ID?: number;
      /**
       * @description Naam van het lid
       * @example Juffrouw Ooievaar
       */
      NAAM?: string;
      /**
       * @description Jaar
       * @example 2021
       */
      JAAR?: number;
      /**
       * @description Maand 1..12, null voor jaar totaal
       * @example 12
       */
      MAAND?: number;
      /**
       * @description Aantal diensten
       * @example 39
       */
      AANTAL?: number;
    };
  };
}


