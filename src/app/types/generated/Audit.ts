/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/Audit/CreateTable": {
    post: {
      parameters: {
        query: {
          /** Dummy records aanmaken */
          FILLDATA: boolean;
        };
      };
      responses: {
        /** Aangemaakt, Tabel toegevoegd */
        201: unknown;
        /** Data verwerkingsfout, bijv omdat de tabel al bestaat */
        500: unknown;
      };
    };
  };
  "/Audit/CreateViews": {
    post: {
      responses: {
        /** Aangemaakt, View toegevoegd */
        201: unknown;
        /** Data verwerkingsfout, view niet aangemaak */
        500: unknown;
      };
    };
  };
  "/Audit/GetObjects": {
    get: {
      parameters: {
        query: {
          /** Database ID van het aanwezig record */
          ID?: number;
          /** Toon welke records verwijderd zijn. Default = false */
          VERWIJDERD?: boolean;
          /** Laatste aanpassing op basis van records in dataset. Bedoeld om starts verbruik te verminderen. Dataset is daarom leeg */
          LAATSTE_AANPASSING?: boolean;
          /** HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde starts bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen starts verzonden als het nodig is. */
          HASH?: string;
          /** Sortering van de velden in ORDER BY formaat. Default = CLUBKIST DESC, VOLGORDE, REGISTRATIE */
          SORT?: string;
          /** Maximum aantal records in de dataset. Gebruikt in LIMIT query */
          MAX?: number;
          /** Eerste record in de dataset. Gebruikt in LIMIT query */
          START?: number;
          /** Welke velden moet opgenomen worden in de dataset */
          VELDEN?: string;
          /** Haal alle audit records op van een specifiek lid */
          LID_ID?: string;
        };
      };
      responses: {
        /** OK, starts succesvol opgehaald */
        200: {
          content: {
            "application/json": components["schemas"]["audit"];
          };
        };
        /** Data niet gemodificeerd, HASH in aanroep == hash in dataset */
        304: never;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
}

export interface components {
  schemas: {
    audit_in: {
      /** Database ID van het record */
      ID?: number;
      /** Welk lid heeft de aanpassing gemaakt? */
      LID_ID?: number;
      /** De database tabel waar het om gaat */
      TABEL?: string;
      /** Gebruikersvriendelijke naam van de database */
      TABEL_NAAM?: string;
      /** De database actie */
      ACTIIE?: string;
      /** De dataset voor de databse bewerking in JSON formaat */
      VOOR?: string;
      /** De starts voor de bewerking in JSON formaat */
      DATA?: string;
      /** De dataset voor de databse bewerking in JSON formaat */
      RESULTAAT?: string;
    };
    audit: components["schemas"]["audit_in"] & {
      /** Is dit record gemarkeerd als verwijderd? */
      VERWIJDERD?: boolean;
      /** Tijdstempel van laaste aanpassing in de database */
      LAATSTE_AANPASSING?: string;
    };
    view_audit_dataset: components["schemas"]["audit"] & {
      /** De naam van het lid die de wijziging heeft gedaan */
      NAAM?: string;
      /** Heeft de starttoren de wijziging ingevperd */
      STARTTOREN?: boolean;
      /** Is diegene die aanpassing gemaakt heeft een beheerder? */
      BEHEERDER?: boolean;
      /** Wat voor een soort lid heeft de aanpassing gedaan */
      LIDTYPE_ID?: number;
      /** Wat voor een soort lid heeft de aanpassing gedaan, */
      LIDTYPE?: string;
      /** Is de aanpassing op een DDWV gedaan? */
      DDWV?: boolean;
    };
    view_audit: {
      /** Aantal records dat voldoet aan de criteria in de database */
      totaal?: number;
      /** Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria */
      laatste_aanpassing?: string;
      /** hash van de dataset */
      hash?: string;
      /** De dataset met records */
      dataset?: components["schemas"]["view_audit_dataset"][];
    };
  };
}

export interface operations {}
