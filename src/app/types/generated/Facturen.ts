/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/Facturen/CreateTable": {
    post: {
      parameters: {
        query: {
          /** Dummy records aanmaken */
          FILLDATA: boolean;
        };
      };
      responses: {
        /** Aangemaakt, Tabel toegevoegd */
        201: unknown;
        /** Data verwerkingsfout, bijv omdat de tabel al bestaat */
        500: unknown;
      };
    };
  };
  "/Facturen/CreateViews": {
    post: {
      responses: {
        /** Aangemaakt, View toegevoegd */
        201: unknown;
        /** Data verwerkingsfout, view niet aangemaak */
        500: unknown;
      };
    };
  };
  "/Facturen/GetObject": {
    get: {
      parameters: {
        query: {
          /** Database ID van het track record */
          ID: number;
        };
      };
      responses: {
        /** OK, data succesvol opgehaald */
        200: {
          content: {
            "application/json": components["schemas"]["oper_facturen"];
          };
        };
        /** Data niet gevonden */
        404: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Facturen/GetObjects": {
    get: {
      parameters: {
        query: {
          /** Database ID van het aanwezig record */
          ID?: number;
          /** Toon welke records verwijderd zijn. Default = false */
          VERWIJDERD?: boolean;
          /** Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg */
          LAATSTE_AANPASSING?: boolean;
          /** HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
          HASH?: string;
          /** Sortering van de velden in ORDER BY formaat. Default = CLUBKIST DESC, VOLGORDE, REGISTRATIE */
          SORT?: string;
          /** Maximum aantal records in de dataset. Gebruikt in LIMIT query */
          MAX?: number;
          /** Eerste record in de dataset. Gebruikt in LIMIT query */
          START?: number;
          /** Welke velden moet opgenomen worden in de dataset */
          VELDEN?: string;
          /** Haal alle facturen op van een specifiek lid */
          LID_ID?: string;
          /** Haal alle facturen op van een bepaald jaar */
          JAAR?: string;
        };
      };
      responses: {
        /** OK, data succesvol opgehaald */
        200: {
          content: {
            "application/json": components["schemas"]["oper_facturen"];
          };
        };
        /** Data niet gemodificeerd, HASH in aanroep == hash in dataset */
        304: never;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Facturen/NogTeFactureren": {
    get: {
      parameters: {
        query: {
          /** HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is. */
          HASH?: string;
          /** Haal alle facturen op van een bepaald jaar */
          JAAR?: string;
        };
      };
      responses: {
        /** OK, data succesvol opgehaald */
        200: {
          content: {
            "application/json": components["schemas"]["oper_facturen"];
          };
        };
        /** Data niet gemodificeerd, HASH in aanroep == hash in dataset */
        304: never;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Facturen/DeleteObject": {
    delete: {
      parameters: {
        query: {
          /** Database ID van het record. Meerdere ID's in CSV formaat */
          ID: string;
          /** Controleer of record bestaat voordat het verwijderd wordt. Default = true */
          VERIFICATIE?: boolean;
        };
      };
      responses: {
        /** Factuur verwijderd */
        204: never;
        /** Niet geautoriseerd, geen schrijfrechten */
        401: unknown;
        /** Data niet gevonden */
        404: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
    };
  };
  "/Facturen/AanmakenFacturen": {
    post: {
      responses: {
        /** Facturen aangemaakt */
        201: unknown;
        /** Niet geautoriseerd, geen schrijfrechten */
        401: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
      /** track data */
      requestBody: {
        content: {
          "application/json": {
            /**
             * Format: int32
             * @description Jaar van de factuur
             * @example 2014
             */
            JAAR?: number;
            /**
             * @description Lid ID voor de factuur. Verwijzing naar leden tabel
             * @example [
             *   10321,
             *   10201,
             *   10380
             * ]
             */
            LID_ID?: number[];
          };
        };
      };
    };
  };
  "/Facturen/SaveObject": {
    put: {
      responses: {
        /** OK, data succesvol aangepast */
        200: {
          content: {
            "application/json": components["schemas"]["oper_facturen"];
          };
        };
        /** Niet geautoriseerd, geen schrijfrechten */
        401: unknown;
        /** Data niet gevonden */
        404: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
      /** track data */
      requestBody: {
        content: {
          "application/json": components["schemas"]["oper_factuur_in"];
        };
      };
    };
    post: {
      responses: {
        /** OK, data succesvol toegevoegd */
        200: {
          content: {
            "application/json": components["schemas"]["oper_facturen"];
          };
        };
        /** Niet geautoriseerd, geen schrijfrechten */
        401: unknown;
        /** Methode niet toegestaan, input validatie error */
        405: unknown;
        /** Niet aanvaardbaar, input ontbreekt */
        406: unknown;
        /** Conflict, record bestaat al */
        409: unknown;
        /** Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer) */
        500: unknown;
      };
      /** track data */
      requestBody: {
        content: {
          "application/json": components["schemas"]["oper_factuur_in"];
        };
      };
    };
  };
}

export interface components {
  schemas: {
    oper_factuur_in: {
      /**
       * Format: int32
       * @description Database ID van het record
       * @example 14
       */
      ID?: number;
      /**
       * Format: int32
       * @description Jaar van de factuur
       * @example 2014
       */
      JAAR?: number;
      /**
       * @description Lid ID voor de factuur. Verwijzing naar leden tabel
       * @example 10321
       */
      LID_ID?: number;
      /**
       * @description Factuur nummer zoals dat door de boekhouding uitgedeeld is
       * @example F00012
       */
      FACTUUR_NUMMER?: string;
      /**
       * @description Omschrijving van de factuurregel
       * @example Contributie 2028
       */
      OMSCHRIJVING?: string;
      /**
       * @description Contributie in euro voor deze factuur
       * @example 980
       */
      GEFACTUREERD?: number;
    };
    oper_facturen: components["schemas"]["oper_factuur_in"] & {
      /**
       * @description Kopie van lidnr zoals dat in de leden tabel staat
       * @example 200912
       */
      LIDNR?: string;
      /**
       * @description Naam van het lid
       * @example Momfort de Mol
       */
      NAAM?: string;
      /**
       * Format: int32
       * @description Het soort lid (jeugdlid, lid, donateur). Verwijzing naar type tabel
       * @example 603
       */
      LIDTYPE_ID?: number;
      /**
       * @description Heeft het lid zijn/haar lidmaatschap opgezegd?
       * @example false
       */
      OPGEZEGD?: boolean;
      /**
       * Format: int16
       * @description Leeftijd van het lid op 1 januari van het te factureren jaar
       * @example 12
       */
      LEEFTIJD?: number;
      /**
       * @description Is dit record gemarkeerd als verwijderd?
       * @example 0
       */
      VERWIJDERD?: boolean;
      /**
       * Format: date-time
       * @description Tijdstempel van laaste aanpassing in de database
       * @example 2021-05-05 20:13:59Z
       */
      LAATSTE_AANPASSING?: string;
    };
    view_facturen_dataset: components["schemas"]["oper_facturen"];
    view_facturen: {
      /**
       * Format: int32
       * @description Aantal records dat voldoet aan de criteria in de database
       * @example 287
       */
      totaal?: number;
      /**
       * Format: date-time
       * @description Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
       * @example 2019-01-05 10:09:53
       */
      laatste_aanpassing?: string;
      /**
       * @description hash van de dataset
       * @example dd00bff
       */
      hash?: string;
      /** @description De dataset met records */
      dataset?: components["schemas"]["view_facturen_dataset"][];
    };
  };
}


